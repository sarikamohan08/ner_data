import os
import pandas as pd
import re
from datetime import datetime

# Set the root folder location where files will be searched
root_folder = '/path/to/root_folder'

# Function to extract text from the file at a given path
def extract_text_from_file(file_path):
    # For simplicity, this function just reads the text directly.
    # Adjust this function depending on the actual format of your text files.
    with open(file_path, 'r', encoding='utf-8') as file:
        text = file.read()
    return text

# Function to extract the date from text using regex
def extract_date_from_text(text):
    # Example regex for dates in formats like "2023-11-12" or "12/11/2023"
    date_regex = r'(\d{4}-\d{2}-\d{2})|(\d{2}/\d{2}/\d{4})'
    match = re.search(date_regex, text)
    if match:
        date_str = match.group()
        try:
            # Normalize date to a standard format (e.g., YYYY-MM-DD)
            date_obj = datetime.strptime(date_str, '%Y-%m-%d') if '-' in date_str else datetime.strptime(date_str, '%d/%m/%Y')
            return date_obj.strftime('%Y-%m-%d')
        except ValueError:
            pass
    return None

# Main function to process Excel files and extract data
def process_excel_file(input_filename, output_folder, output_prefix):
    # Load the Excel file into a DataFrame
    df = pd.read_excel(input_filename)

    # Initialize list to collect processed data
    processed_data = []

    for index, row in df.iterrows():
        file_path = os.path.join(root_folder, row['filepath'])

        if os.path.exists(file_path):
            text = extract_text_from_file(file_path)
            extracted_date = extract_date_from_text(text)
            
            # Append processed data
            processed_data.append({
                'id': row['id'],
                'date': row['date'],
                'filepath': row['filepath'],
                'extracted_date': extracted_date
            })
        else:
            print(f"File not found: {file_path}")

    # Convert processed data to DataFrame
    output_df = pd.DataFrame(processed_data)
    
    # Get current date for output filename
    current_date = datetime.now().strftime('%Y-%m-%d')
    
    # Save output to a new Excel file
    output_filename = os.path.join(output_folder, f'{output_prefix}_{current_date}.xlsx')
    output_df.to_excel(output_filename, index=False)
    print(f'Saved file: {output_filename}')

# Set paths for input files and output folders
input_file_rts = 'excel_rts.xlsx'
input_file_reply = 'excel_reply.xlsx'
output_folder_rts = '/path/to/save/try_rts'
output_folder_reply = '/path/to/save/try_reply'

# Ensure output folders exist
os.makedirs(output_folder_rts, exist_ok=True)
os.makedirs(output_folder_reply, exist_ok=True)

# Process both files
process_excel_file(input_file_rts, output_folder_rts, 'try_rts')
process_excel_file(input_file_reply, output_folder_reply, 'try_reply')
