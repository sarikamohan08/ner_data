def add_timeframes_to_dict(input_dict):
    PROMPT_TEMPLATE = """
    You are given extracted text: "{text}".
    From it, extract the timeframe if available.
    - If there's a start and end time, return them as "start - end".
    - If only one time/date is found, just return it.
    - If no time is present, return "No timeframe".

    Only return the timeframe string.
    """

    def get_timeframe(text: str) -> str:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "You are an assistant that extracts timeframes."},
                {"role": "user", "content": PROMPT_TEMPLATE.format(text=text)}
            ]
        )
        return response.choices[0].message.content.strip()

    for key, value in input_dict.items():
        if isinstance(value, list):
            for item in value:
                timeframe = get_timeframe(item["extracted text from pdf"])
                item[f"{key.lower()}_timeframe"] = timeframe
        else:
            timeframe = get_timeframe(value["extracted text from pdf"])
            value[f"{key.lower()}_timeframe"] = timeframe

    return input_dict
