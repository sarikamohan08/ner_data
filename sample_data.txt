import cv2
import numpy as np
from PIL import Image

# Read TIFF as an array
pil_image = Image.open('image.tiff')
image = np.array(pil_image)

# Handle 1-bit, grayscale, or color
if image.dtype == np.bool_ or image.dtype == bool:
    image = image.astype(np.uint8) * 255   # Convert bool to uint8

if image.ndim == 2:  # Grayscale
    gray = image
elif image.ndim == 3:
    if image.shape[2] == 4:
        image = cv2.cvtColor(image, cv2.COLOR_RGBA2BGR)
    elif image.shape[2] == 3:
        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Gaussian blur
blurred = cv2.GaussianBlur(gray, (3, 3), 0)

# Adaptive threshold
thresh = cv2.adaptiveThreshold(
    blurred, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,
    cv2.THRESH_BINARY, 15, 6
)

# Morphology
kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (1, 1))
morphed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel, iterations=1)

# CLAHE (optional)
clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8))
final = clahe.apply(morphed)

# Save
cv2.imwrite('enhanced_output.tiff', final)

print("Saved as 'enhanced_output.tiff'")
