import os
import pytesseract
from PIL import Image
import camelot

# Set the path to the Tesseract executable if it's not in your PATH
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

class TaxIDProcessor:
    def __init__(self, input_folder, output_folder):
        self.input_folder = input_folder
        self.output_folder = output_folder
        
        # Ensure the output folder exists
        os.makedirs(self.output_folder, exist_ok=True)

    def process_taxid_folders(self):
        # Loop through each tax ID folder
        for tax_id in os.listdir(self.input_folder):
            tax_id_path = os.path.join(self.input_folder, tax_id)
            if os.path.isdir(tax_id_path):  # Check if it's a folder
                output_subfolder = os.path.join(self.output_folder, tax_id)
                os.makedirs(output_subfolder, exist_ok=True)
                self.process_subfolders(tax_id_path, output_subfolder)

    def process_subfolders(self, tax_id_path, output_subfolder):
        for item in os.listdir(tax_id_path):
            item_path = os.path.join(tax_id_path, item)

            if os.path.isdir(item_path):  # Check for subfolder
                self.extract_text_from_images(item_path, output_subfolder)
                self.extract_tables_from_pdfs(item_path, output_subfolder)

    def extract_text_from_images(self, folder_path, output_subfolder):
        """Extract text from image files in the given folder and save as .txt files."""
        for filename in os.listdir(folder_path):
            file_path = os.path.join(folder_path, filename)
            if filename.lower().endswith(('.png', '.jpg', '.jpeg')):
                text = pytesseract.image_to_string(Image.open(file_path))
                text_filename = os.path.splitext(filename)[0] + '.txt'
                with open(os.path.join(output_subfolder, text_filename), 'w') as text_file:
                    text_file.write(text)

    def extract_tables_from_pdfs(self, folder_path, output_subfolder):
        """Extract tables from PDF files in the given folder and save as .xlsx files."""
        for filename in os.listdir(folder_path):
            file_path = os.path.join(folder_path, filename)
            if filename.lower().endswith('.pdf'):
                tables = camelot.read_pdf(file_path, pages='all')
                for i, table in enumerate(tables):
                    excel_filename = os.path.splitext(filename)[0] + f'_table_{i}.xlsx'
                    table.to_excel(os.path.join(output_subfolder, excel_filename), index=False)

# Example usage
if __name__ == "__main__":
    main_input_folder = 'path_to_input_folder'  # Replace with your input folder path
    main_output_folder = 'path_to_output_folder'  # Replace with your desired output folder path

    processor = TaxIDProcessor(main_input_folder, main_output_folder)
    processor.process_taxid_folders()
