import os
import pytesseract
import pandas as pd
from pdf2image import convert_from_path
from PyPDF2 import PdfReader

# Function to extract text from a PDF using PyPDF2 (for text-based PDFs)
def extract_text_from_pdf(pdf_path):
    text = ""
    try:
        reader = PdfReader(pdf_path)
        for page_num in range(len(reader.pages)):
            page = reader.pages[page_num]
            text += page.extract_text()
    except Exception as e:
        print(f"Error reading {pdf_path}: {e}")
    return text

# Function to extract text from an image-based PDF using pytesseract (OCR)
def extract_text_with_ocr(pdf_path):
    text = ""
    try:
        # Convert PDF pages to images
        images = convert_from_path(pdf_path)
        for image in images:
            # Use pytesseract to do OCR on each image
            text += pytesseract.image_to_string(image)
    except Exception as e:
        print(f"Error in OCR processing {pdf_path}: {e}")
    return text

# Read Excel to get list of Tax IDs
excel_file = 'path_to_excel_file.xlsx'
tax_id_column_name = 'Tax_ID'  # Adjust according to your Excel column name
df = pd.read_excel(excel_file)

# Directory containing folders for each Tax ID
base_directory = 'path_to_tax_id_folders'

# Iterate over each Tax ID
for tax_id in df[tax_id_column_name]:
    tax_folder = os.path.join(base_directory, str(tax_id))
    
    if os.path.isdir(tax_folder):
        print(f"Processing folder: {tax_folder}")
        
        # List all PDF files in the Tax ID folder
        for filename in os.listdir(tax_folder):
            if filename.endswith(".pdf"):
                pdf_path = os.path.join(tax_folder, filename)
                print(f"Processing PDF: {pdf_path}")
                
                # Extract text from the PDF
                text = extract_text_from_pdf(pdf_path)
                
                # If no text is found (could be image-based), try OCR
                if not text.strip():
                    print(f"No text found, applying OCR to {pdf_path}")
                    text = extract_text_with_ocr(pdf_path)
                
                # Save extracted text to a text file
                output_text_file = os.path.join(tax_folder, f"{os.path.splitext(filename)[0]}.txt")
                with open(output_text_file, "w", encoding="utf-8") as f:
                    f.write(text)
                
                print(f"Text saved to: {output_text_file}")
    else:
        print(f"Folder not found for Tax ID: {tax_id}")


for index, row in df.iterrows():
    tax_id = row[tax_id_column_name]
    tax_folder = os.path.join(base_directory, str(tax_id))
    
    if os.path.isdir(tax_folder):
        print(f"Processing folder: {tax_folder}")
        
        # List all PDF files in the Tax ID folder
        for filename in os.listdir(tax_folder):
            if filename.endswith(".pdf"):
                pdf_path = os.path.join(tax_folder, filename)
                print(f"Processing PDF: {pdf_path}")
