from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import os
import time
import zipfile

# Set the download directory for the browser
download_dir = os.path.abspath("downloads")  # Ensure this folder exists
os.makedirs(download_dir, exist_ok=True)

options = webdriver.ChromeOptions()
prefs = {
    "download.default_directory": download_dir,
    "download.prompt_for_download": False,
    "download.directory_upgrade": True,
    "safebrowsing.enabled": True
}
options.add_experimental_option("prefs", prefs)

# Initialize the WebDriver
driver = webdriver.Chrome(options=options)

try:
    # Navigate to the website
    driver.get("YOUR_TARGET_WEBSITE_URL")  # Replace with the actual URL

    # Wait for the export button to be visible and click it
    wait = WebDriverWait(driver, 20)
    export_button = wait.until(EC.element_to_be_clickable((By.XPATH, "EXPORT_BUTTON_XPATH")))
    export_button.click()

    # Wait for the CSV option to appear and click it
    csv_option = wait.until(EC.element_to_be_clickable((By.XPATH, "CSV_OPTION_XPATH")))
    csv_option.click()

    # Wait for the ZIP file to download
    time.sleep(10)  # Adjust based on expected download time

    # Find the downloaded ZIP file
    downloaded_files = os.listdir(download_dir)
    zip_files = [f for f in downloaded_files if f.endswith(".zip")]

    if not zip_files:
        raise FileNotFoundError("No ZIP file found in the download directory.")

    zip_file_path = os.path.join(download_dir, zip_files[0])

    # Extract the ZIP file
    with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
        zip_ref.extractall(download_dir)

    print(f"Files extracted to: {download_dir}")

except Exception as e:
    print(f"An error occurred: {e}")

finally:
    # Close the browser
    driver.quit()
