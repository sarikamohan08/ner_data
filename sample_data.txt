# Regex to extract TIN# (e.g., TIN# 650272881)
    tin_pattern = r"TIN#\s*(\d+)"
    tin_match = re.search(tin_pattern, text)

    # Regex to extract Surplus Percentage (e.g., surplus to /n 85% or surplus 85%)
    surplus_percentage_pattern = r"surplus\s*(?:to\s*/n\s*)?(\d+)%"
    surplus_percentage_match = re.search(surplus_percentage_pattern, text, re.IGNORECASE)

    # Regex to extract Surplus Amount (e.g., reduce reserves to $150 PMPM or reserve fea $150)
    surplus_amount_pattern = r"(?:reduce\s*reserves\s*to|reserve\s*fea)\s*\$(\d+)"
    surplus_amount_match = re.search(surplus_amount_pattern, text, re.IGNORECASE)

    # Regex to extract LOB (e.g., Include 713)
    lob_pattern = r"Include\s*(\d+)"
    lob_match = re.search(lob_pattern, text, re.IGNORECASE)

tin = tin_match.group(1) if tin_match else "Not Found"
    surplus_percentage = surplus_percentage_match.group(1) if surplus_percentage_match else "Not Found"
    surplus_amount = surplus_amount_match.group(1) if surplus_amount_match else "Not Found"
    lob = lob_match.group(1) if lob_match else "Not Found"

    return npi_id, vendor_id, effective_date, tin, surplus_percentage, surplus_amount, lob

pi_id, vendor_id, effective_date, tin, surplus_percentage, surplus_amount, lob = extract_metadata(extracted_text)
                    print(f"NPI#: {npi_id}, Vendor#: {vendor_id}, Effective Date: {effective_date}, TIN#: {tin}, Surplus Percentage: {surplus_percentage}, Surplus Amount: {surplus_amount}, LOB: {lob}")

                    # Save metadata to a CSV file
                    metadata_df = pd.DataFrame({
                        "NPI#": [npi_id],
                        "Vendor#": [vendor_id],
                        "Effective Date": [effective_date],
                        "TIN#": [tin],
                        "Surplus Percentage": [surplus_percentage],
                        "Surplus Amount": [surplus_amount],
                        "LOB": [lob]
                    })
