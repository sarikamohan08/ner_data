import pandas as pd

# Read the Excel file into a DataFrame
df = pd.read_excel('your_file.xlsx')

# Dynamically identify hospital columns based on column names
# We'll assume the hospital columns are those that are not 'Description', 'Service Description', 'MS-DRG', 'Rev Code', 'Coding/Def'
hospital_columns = [col for col in df.columns if col not in ['Description', 'Service Description', 'MS-DRG', 'Rev Code', 'Coding/Def']]

# Create an empty list to store the processed rows
processed_data = []

# Iterate over each row in the DataFrame
for index, row in df.iterrows():
    # Extract the dynamic service description (it can be any text in the 'Service Description' column)
    service_description = row['Service Description']
    
    # For each hospital, process the data if there is a value in the hospital column
    for hospital in hospital_columns:
        if pd.notna(row[hospital]):  # Check if the hospital column has a value
            # Check if both MS-DRG and Rev Code are present
            if pd.notna(row['MS-DRG']) and pd.notna(row['Rev Code']):
                # If both are present, split the row into two entries
                # First entry with MS-DRG marked and Rev Code empty
                processed_data.append([
                    hospital, row['Description'], service_description,
                    row['MS-DRG'], '', row['Coding/Def']
                ])
                # Second entry with Rev Code marked and MS-DRG empty
                processed_data.append([
                    hospital, row['Description'], service_description,
                    '', row['Rev Code'], row['Coding/Def']
                ])
            else:
                # Otherwise, just append the original row with the hospital
                processed_data.append([
                    hospital, row['Description'], service_description,
                    row['MS-DRG'], row['Rev Code'], row['Coding/Def']
                ])

# Create a new DataFrame with the processed data
processed_df = pd.DataFrame(processed_data, columns=['Provider', 'Description', 'Service Description', 'MS-DRG', 'Rev Code', 'Coding/Def'])

# Output the processed DataFrame to a new Excel file or display it
processed_df.to_excel('processed_file.xlsx', index=False)

# Optionally, display the first few rows to check the output
print(processed_df.head())
