import os
import pandas as pd

# Folder containing Excel files
excel_folder = 'path_to_excel_folder'
address_keywords = ['address', 'location', 'street', 'city', 'state', 'zip', 'postal']  # Add more keywords if needed

# Function to check if any cell in a DataFrame contains address-related keywords
def contains_address_keywords(df):
    for keyword in address_keywords:
        if df.apply(lambda x: x.astype(str).str.contains(keyword, case=False, na=False).any()).any():
            return True
    return False

# Function to check if a file is a valid Excel file
def is_valid_excel_file(filepath):
    try:
        pd.ExcelFile(filepath)
        return True
    except Exception as e:
        print(f"Invalid Excel file or error reading '{filepath}': {e}")
        return False

# Dictionary to store address-related data
address_data = {}

# Iterate over each file in the folder
for filename in os.listdir(excel_folder):
    if filename.lower().endswith('.xlsx'):
        excel_path = os.path.join(excel_folder, filename)
        
        # Check if the file is a valid Excel file
        if not is_valid_excel_file(excel_path):
            print(f"Skipping '{filename}' as it is not a valid Excel file.")
            continue
        
        try:
            # Load the Excel file
            excel_file = pd.ExcelFile(excel_path)
        except Exception as e:
            print(f"Error reading {filename}: {e}. Skipping this file.")
            continue  # Skip to the next file
        
        # Create a dictionary to store DataFrames for address-related sheets
        address_sheets = {}
        
        for sheet_name in excel_file.sheet_names:
            try:
                df = pd.read_excel(excel_path, sheet_name=sheet_name)
            except Exception as e:
                print(f"Error reading sheet '{sheet_name}' in {filename}: {e}. Skipping this sheet.")
                continue  # Skip to the next sheet
            
            # Check if the DataFrame contains address-related keywords
            if contains_address_keywords(df):
                address_sheets[sheet_name] = df
                print(f'Address-related data found in sheet "{sheet_name}" of file "{filename}".')
        
        # Store address-related sheets in the dictionary if any were found
        if address_sheets:
            address_data[filename] = address_sheets

print("Address extraction complete.")

# Example: Print the dictionary keys and their contents (for verification)
for file, sheets in address_data.items():
    print(f"\nFile: {file}")
    for sheet_name, df in sheets.items():
        print(f"Sheet: {sheet_name}")
        print(df.head())  # Print the first few rows of the DataFrame for verification

# If needed, you can now work with the `address_data` dictionary in your code
