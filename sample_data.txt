def load_filepaths(excel_path, column_name):
    df = pd.read_excel(excel_path)
    return df[column_name].dropna().tolist()

def is_valid_pdf_path(file_path):
    fname = os.path.basename(file_path).lower()
    return file_path.lower().endswith('.pdf') and ('contract' in fname or 'amendment' in fname)

def extract_text_from_pdf_ocr(file_path):
    extracted_data = []
    fname = os.path.basename(file_path)

    try:
        images = convert_from_path(file_path)
        file_extracted = False

        for page_num, image in enumerate(images, start=1):
            text = pytesseract.image_to_string(image)
            matches = re.findall(TEXT_PATTERN, text, re.IGNORECASE | re.DOTALL)
            for match in matches:
                file_extracted = True
                cleaned_text = match.strip().replace(')', ' ')
                save_text_to_file(fname, page_num, cleaned_text)
                extracted_data.append({
                    'filename': fname,
                    'page_number': page_num,
                    'extracted_text': cleaned_text,
                    'extracted': True
                })

        if not file_extracted:
            extracted_data.append({
                'filename': fname,
                'page_number': None,
                'extracted_text': None,
                'extracted': False
            })

    except Exception as e:
        extracted_data.append({
            'filename': fname,
            'page_number': None,
            'extracted_text': f"Error: {str(e)}",
            'extracted': False
        })

    return extracted_data

def save_text_to_file(fname, page_num, text):
    base_name = os.path.splitext(fname)[0]
    txt_filename = f"{base_name}_page_{page_num}.txt"
    txt_path = os.path.join(TEXT_OUTPUT_FOLDER, txt_filename)
    with open(txt_path, 'w', encoding='utf-8') as f:
        f.write(text)

def main():
    os.makedirs(TEXT_OUTPUT_FOLDER, exist_ok=True)
    all_extracted_data = []

    filepaths = load_filepaths(INPUT_EXCEL_PATH, EXCEL_COLUMN_NAME)

    for path in filepaths:
        if not is_valid_pdf_path(path):
            continue

        if os.path.isfile(path):
            results = extract_text_from_pdf_ocr(path)
            all_extracted_data.extend(results)
        else:
            all_extracted_data.append({
                'filename': os.path.basename(path),
                'page_number': None,
                'extracted_text': None,
                'extracted': False
            })

    df_output = pd.DataFrame(all_extracted_data)
    df_output.to_excel(OUTPUT_EXCEL_PATH, index=False)
    print(f"âœ… OCR-based extraction complete. Results saved to {OUTPUT_EXCEL_PATH}")
