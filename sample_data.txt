import os
import camelot
from pdf2image import convert_from_path
import pytesseract
import pandas as pd
from PIL import Image

# Define paths
pdf_path = 'path_to_your_image_based_pdf.pdf'
output_folder = 'path_to_save_excel_files'  # Folder to save Excel files

# Ensure the output folder exists
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# Convert PDF to images
images = convert_from_path(pdf_path)

# Loop through each image, apply OCR, and extract tables
for page_num, image in enumerate(images):
    # Use Tesseract to extract text from the image
    ocr_text = pytesseract.image_to_string(image)

    # Save OCR result as a text-based PDF
    image_path = os.path.join(output_folder, f"page_{page_num+1}.jpg")
    image.save(image_path)  # Save each page as an image

    # Use Camelot on the OCR text (you may need to adjust based on the OCR result)
    tables = camelot.read_pdf(image_path, pages='1', flavor='stream')  # You can also try 'lattice' here

    # Initialize an empty list to store DataFrames
    df_list = []

    # Process tables and save as Excel
    if len(tables) > 0:
        for i, table in enumerate(tables):
            df = table.df
            if not df.empty:
                df_list.append(df)

        if df_list:
            combined_df = pd.concat(df_list, ignore_index=True)
            excel_path = os.path.join(output_folder, f'page_{page_num+1}.xlsx')
            combined_df.to_excel(excel_path, index=False)
            print(f"Extracted tables from page {page_num+1} saved to {excel_path}")
